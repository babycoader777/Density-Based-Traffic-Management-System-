
trafic5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000025a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002ae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  0000031c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000078a  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a4  00000000  00000000  00000ade  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000040c  00000000  00000000  00001082  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  00001490  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000339  00000000  00000000  00001538  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002fa  00000000  00000000  00001871  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001b6b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__vector_1>
   8:	0c 94 dd 00 	jmp	0x1ba	; 0x1ba <__vector_2>
   c:	0c 94 04 01 	jmp	0x208	; 0x208 <__vector_3>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 2b 01 	jmp	0x256	; 0x256 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define Y4 PB4
#define G4 PB5

int main(void)
{
	DDRA=0xff;             //make port A output
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xff;            // make port B output
  70:	87 bb       	out	0x17, r24	; 23
	DDRC=0x00;             //make port C input
  72:	14 ba       	out	0x14, r1	; 20
	//DDRC|=(1<<6);
	//DDRC|=(1<<7);
	
	//DDRB=0xff;
	
	DDRD &=~(1<<PD2);       //make pd2 an i/p pin (INT0 pin)
  74:	81 b3       	in	r24, 0x11	; 17
  76:	8b 7f       	andi	r24, 0xFB	; 251
  78:	81 bb       	out	0x11, r24	; 17
	PORTD|=(1<<PD2);        //activate the pull up
  7a:	82 b3       	in	r24, 0x12	; 18
  7c:	84 60       	ori	r24, 0x04	; 4
  7e:	82 bb       	out	0x12, r24	; 18
	
	DDRD &=~(1<<PD3);       //make pd3 an i/p pin (INT1 pin)
  80:	81 b3       	in	r24, 0x11	; 17
  82:	87 7f       	andi	r24, 0xF7	; 247
  84:	81 bb       	out	0x11, r24	; 17
	PORTD|=(1<<PD3);        //activate the pull up
  86:	82 b3       	in	r24, 0x12	; 18
  88:	88 60       	ori	r24, 0x08	; 8
  8a:	82 bb       	out	0x12, r24	; 18
	
	DDRB &=~(1<<PB2);       //make pb2 an i/p pin (INT2 pin)
  8c:	87 b3       	in	r24, 0x17	; 23
  8e:	8b 7f       	andi	r24, 0xFB	; 251
  90:	87 bb       	out	0x17, r24	; 23
	PORTB|=(1<<PB2);        //activate the pull up
  92:	88 b3       	in	r24, 0x18	; 24
  94:	84 60       	ori	r24, 0x04	; 4
  96:	88 bb       	out	0x18, r24	; 24
	
	GICR=0xE0 ;         //enable external interrupt
  98:	80 ee       	ldi	r24, 0xE0	; 224
  9a:	8b bf       	out	0x3b, r24	; 59
	
	// _delay_ms(50);
	//MCUCR=0x00;             //make int0 as level triggerred interrupt
	sei();                   //enable interrupts
  9c:	78 94       	sei
	while(1)
	{
		PORTA = 0x00;
  9e:	1b ba       	out	0x1b, r1	; 27
		PORTB = 0x00;
  a0:	18 ba       	out	0x18, r1	; 24
		if((PINC&0x10) == 0x00)
  a2:	9c 9b       	sbis	0x13, 4	; 19
  a4:	17 c0       	rjmp	.+46     	; 0xd4 <main+0x68>
			
		}
		else
		{
			
			PORTA |= (1<<G1);
  a6:	8b b3       	in	r24, 0x1b	; 27
  a8:	84 60       	ori	r24, 0x04	; 4
  aa:	8b bb       	out	0x1b, r24	; 27
			PORTA |= (1<<Y2);
  ac:	8b b3       	in	r24, 0x1b	; 27
  ae:	80 61       	ori	r24, 0x10	; 16
  b0:	8b bb       	out	0x1b, r24	; 27
			PORTB |= (1<<R3);
  b2:	88 b3       	in	r24, 0x18	; 24
  b4:	81 60       	ori	r24, 0x01	; 1
  b6:	88 bb       	out	0x18, r24	; 24
			PORTB |= (1<<R4);
  b8:	88 b3       	in	r24, 0x18	; 24
  ba:	88 60       	ori	r24, 0x08	; 8
  bc:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	80 e7       	ldi	r24, 0x70	; 112
  c2:	92 e0       	ldi	r25, 0x02	; 2
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x58>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x62>
  ce:	00 00       	nop
			
			_delay_ms(100);
			PORTA = 0x00;
  d0:	1b ba       	out	0x1b, r1	; 27
			PORTB = 0x00;
  d2:	18 ba       	out	0x18, r1	; 24
			
		}
		// _delay_ms(50);
		if((PINC&0x02) == 0x00)
  d4:	99 9b       	sbis	0x13, 1	; 19
  d6:	17 c0       	rjmp	.+46     	; 0x106 <main+0x9a>
			
		}
		
		else
		{
			PORTA |= (1<<R1);
  d8:	8b b3       	in	r24, 0x1b	; 27
  da:	81 60       	ori	r24, 0x01	; 1
  dc:	8b bb       	out	0x1b, r24	; 27
			PORTA |= (1<<G2);
  de:	8b b3       	in	r24, 0x1b	; 27
  e0:	80 62       	ori	r24, 0x20	; 32
  e2:	8b bb       	out	0x1b, r24	; 27
			PORTB |= (1<<Y3);
  e4:	88 b3       	in	r24, 0x18	; 24
  e6:	82 60       	ori	r24, 0x02	; 2
  e8:	88 bb       	out	0x18, r24	; 24
			PORTB |= (1<<R4);
  ea:	88 b3       	in	r24, 0x18	; 24
  ec:	88 60       	ori	r24, 0x08	; 8
  ee:	88 bb       	out	0x18, r24	; 24
  f0:	2f ef       	ldi	r18, 0xFF	; 255
  f2:	80 e7       	ldi	r24, 0x70	; 112
  f4:	92 e0       	ldi	r25, 0x02	; 2
  f6:	21 50       	subi	r18, 0x01	; 1
  f8:	80 40       	sbci	r24, 0x00	; 0
  fa:	90 40       	sbci	r25, 0x00	; 0
  fc:	e1 f7       	brne	.-8      	; 0xf6 <main+0x8a>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <main+0x94>
 100:	00 00       	nop
			
			
			_delay_ms(100);
			PORTA = 0x00;
 102:	1b ba       	out	0x1b, r1	; 27
			PORTB = 0x00;
 104:	18 ba       	out	0x18, r1	; 24
			
			
		}
		// _delay_ms(50);
		if((PINC&0x04) == 0x00)
 106:	9a 9b       	sbis	0x13, 2	; 19
 108:	17 c0       	rjmp	.+46     	; 0x138 <main+0xcc>
		{
			
		}
		else
		{
			PORTA |= (1<<R1);
 10a:	8b b3       	in	r24, 0x1b	; 27
 10c:	81 60       	ori	r24, 0x01	; 1
 10e:	8b bb       	out	0x1b, r24	; 27
			PORTA |= (1<<R2);
 110:	8b b3       	in	r24, 0x1b	; 27
 112:	88 60       	ori	r24, 0x08	; 8
 114:	8b bb       	out	0x1b, r24	; 27
			PORTB |= (1<<G3);
 116:	88 b3       	in	r24, 0x18	; 24
 118:	80 64       	ori	r24, 0x40	; 64
 11a:	88 bb       	out	0x18, r24	; 24
			PORTB |= (1<<Y4);
 11c:	88 b3       	in	r24, 0x18	; 24
 11e:	80 61       	ori	r24, 0x10	; 16
 120:	88 bb       	out	0x18, r24	; 24
 122:	2f ef       	ldi	r18, 0xFF	; 255
 124:	80 e7       	ldi	r24, 0x70	; 112
 126:	92 e0       	ldi	r25, 0x02	; 2
 128:	21 50       	subi	r18, 0x01	; 1
 12a:	80 40       	sbci	r24, 0x00	; 0
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <main+0xbc>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0xc6>
 132:	00 00       	nop
			
			_delay_ms(100);
			PORTA = 0x00;
 134:	1b ba       	out	0x1b, r1	; 27
			PORTB = 0x00;
 136:	18 ba       	out	0x18, r1	; 24

		}
		//	 _delay_ms(50);
		if((PINC&0x08) == 0x00)
 138:	9b 9b       	sbis	0x13, 3	; 19
 13a:	b1 cf       	rjmp	.-158    	; 0x9e <main+0x32>

			
		}
		else
		{
			PORTA |= (1<<Y1);
 13c:	8b b3       	in	r24, 0x1b	; 27
 13e:	82 60       	ori	r24, 0x02	; 2
 140:	8b bb       	out	0x1b, r24	; 27
			PORTA |= (1<<R2);
 142:	8b b3       	in	r24, 0x1b	; 27
 144:	88 60       	ori	r24, 0x08	; 8
 146:	8b bb       	out	0x1b, r24	; 27
			PORTB |= (1<<R3);
 148:	88 b3       	in	r24, 0x18	; 24
 14a:	81 60       	ori	r24, 0x01	; 1
 14c:	88 bb       	out	0x18, r24	; 24
			PORTB |= (1<<G4);
 14e:	88 b3       	in	r24, 0x18	; 24
 150:	80 62       	ori	r24, 0x20	; 32
 152:	88 bb       	out	0x18, r24	; 24
 154:	2f ef       	ldi	r18, 0xFF	; 255
 156:	80 e7       	ldi	r24, 0x70	; 112
 158:	92 e0       	ldi	r25, 0x02	; 2
 15a:	21 50       	subi	r18, 0x01	; 1
 15c:	80 40       	sbci	r24, 0x00	; 0
 15e:	90 40       	sbci	r25, 0x00	; 0
 160:	e1 f7       	brne	.-8      	; 0x15a <main+0xee>
 162:	00 c0       	rjmp	.+0      	; 0x164 <main+0xf8>
 164:	00 00       	nop
			
			_delay_ms(100);
			PORTA = 0x00;
 166:	1b ba       	out	0x1b, r1	; 27
			PORTB = 0x00;
 168:	18 ba       	out	0x18, r1	; 24
 16a:	99 cf       	rjmp	.-206    	; 0x9e <main+0x32>

0000016c <__vector_1>:
	}
	return 0;
}

ISR(INT0_vect)
{
 16c:	1f 92       	push	r1
 16e:	0f 92       	push	r0
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	0f 92       	push	r0
 174:	11 24       	eor	r1, r1
 176:	2f 93       	push	r18
 178:	8f 93       	push	r24
 17a:	9f 93       	push	r25
	PORTA = 0x00;
 17c:	1b ba       	out	0x1b, r1	; 27
	PORTB = 0x00;
 17e:	18 ba       	out	0x18, r1	; 24
	//PORTC=0x00;
	
	PORTA |= (1<<G1);
 180:	8b b3       	in	r24, 0x1b	; 27
 182:	84 60       	ori	r24, 0x04	; 4
 184:	8b bb       	out	0x1b, r24	; 27
	PORTA |= (1<<Y2);
 186:	8b b3       	in	r24, 0x1b	; 27
 188:	80 61       	ori	r24, 0x10	; 16
 18a:	8b bb       	out	0x1b, r24	; 27
	PORTB |= (1<<R3);
 18c:	88 b3       	in	r24, 0x18	; 24
 18e:	81 60       	ori	r24, 0x01	; 1
 190:	88 bb       	out	0x18, r24	; 24
	PORTB |= (1<<R4);
 192:	88 b3       	in	r24, 0x18	; 24
 194:	88 60       	ori	r24, 0x08	; 8
 196:	88 bb       	out	0x18, r24	; 24
 198:	2f ef       	ldi	r18, 0xFF	; 255
 19a:	82 e5       	ldi	r24, 0x52	; 82
 19c:	97 e0       	ldi	r25, 0x07	; 7
 19e:	21 50       	subi	r18, 0x01	; 1
 1a0:	80 40       	sbci	r24, 0x00	; 0
 1a2:	90 40       	sbci	r25, 0x00	; 0
 1a4:	e1 f7       	brne	.-8      	; 0x19e <__vector_1+0x32>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <__vector_1+0x3c>
 1a8:	00 00       	nop
	//	PORTC |= (1<<PC0);
	_delay_ms(300);
	
	//PORTA = 0x00;
	//PORTB = 0x00;
}
 1aa:	9f 91       	pop	r25
 1ac:	8f 91       	pop	r24
 1ae:	2f 91       	pop	r18
 1b0:	0f 90       	pop	r0
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <__vector_2>:


ISR(INT1_vect)
{
 1ba:	1f 92       	push	r1
 1bc:	0f 92       	push	r0
 1be:	0f b6       	in	r0, 0x3f	; 63
 1c0:	0f 92       	push	r0
 1c2:	11 24       	eor	r1, r1
 1c4:	2f 93       	push	r18
 1c6:	8f 93       	push	r24
 1c8:	9f 93       	push	r25
	
	PORTA = 0x00;
 1ca:	1b ba       	out	0x1b, r1	; 27
	PORTB = 0x00;
 1cc:	18 ba       	out	0x18, r1	; 24
	//PORTC=0x00;
	
	PORTA |= (1<<R1);
 1ce:	8b b3       	in	r24, 0x1b	; 27
 1d0:	81 60       	ori	r24, 0x01	; 1
 1d2:	8b bb       	out	0x1b, r24	; 27
	PORTA |= (1<<G2);
 1d4:	8b b3       	in	r24, 0x1b	; 27
 1d6:	80 62       	ori	r24, 0x20	; 32
 1d8:	8b bb       	out	0x1b, r24	; 27
	PORTB |= (1<<Y3);
 1da:	88 b3       	in	r24, 0x18	; 24
 1dc:	82 60       	ori	r24, 0x02	; 2
 1de:	88 bb       	out	0x18, r24	; 24
	PORTB |= (1<<R4);
 1e0:	88 b3       	in	r24, 0x18	; 24
 1e2:	88 60       	ori	r24, 0x08	; 8
 1e4:	88 bb       	out	0x18, r24	; 24
 1e6:	2f ef       	ldi	r18, 0xFF	; 255
 1e8:	82 e5       	ldi	r24, 0x52	; 82
 1ea:	97 e0       	ldi	r25, 0x07	; 7
 1ec:	21 50       	subi	r18, 0x01	; 1
 1ee:	80 40       	sbci	r24, 0x00	; 0
 1f0:	90 40       	sbci	r25, 0x00	; 0
 1f2:	e1 f7       	brne	.-8      	; 0x1ec <__vector_2+0x32>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <__vector_2+0x3c>
 1f6:	00 00       	nop
	_delay_ms(300);
	
	
	//PORTA = 0x00;
	//PORTB = 0x00;
}
 1f8:	9f 91       	pop	r25
 1fa:	8f 91       	pop	r24
 1fc:	2f 91       	pop	r18
 1fe:	0f 90       	pop	r0
 200:	0f be       	out	0x3f, r0	; 63
 202:	0f 90       	pop	r0
 204:	1f 90       	pop	r1
 206:	18 95       	reti

00000208 <__vector_3>:

ISR(INT2_vect)
{
 208:	1f 92       	push	r1
 20a:	0f 92       	push	r0
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	0f 92       	push	r0
 210:	11 24       	eor	r1, r1
 212:	2f 93       	push	r18
 214:	8f 93       	push	r24
 216:	9f 93       	push	r25
	PORTA = 0x00;
 218:	1b ba       	out	0x1b, r1	; 27
	PORTB = 0x00;
 21a:	18 ba       	out	0x18, r1	; 24
	//PORTC=0x00;
	
	PORTA |= (1<<R1);
 21c:	8b b3       	in	r24, 0x1b	; 27
 21e:	81 60       	ori	r24, 0x01	; 1
 220:	8b bb       	out	0x1b, r24	; 27
	PORTA |= (1<<R2);
 222:	8b b3       	in	r24, 0x1b	; 27
 224:	88 60       	ori	r24, 0x08	; 8
 226:	8b bb       	out	0x1b, r24	; 27
	PORTB |= (1<<G3);
 228:	88 b3       	in	r24, 0x18	; 24
 22a:	80 64       	ori	r24, 0x40	; 64
 22c:	88 bb       	out	0x18, r24	; 24
	PORTB |= (1<<Y4);
 22e:	88 b3       	in	r24, 0x18	; 24
 230:	80 61       	ori	r24, 0x10	; 16
 232:	88 bb       	out	0x18, r24	; 24
 234:	2f ef       	ldi	r18, 0xFF	; 255
 236:	82 e5       	ldi	r24, 0x52	; 82
 238:	97 e0       	ldi	r25, 0x07	; 7
 23a:	21 50       	subi	r18, 0x01	; 1
 23c:	80 40       	sbci	r24, 0x00	; 0
 23e:	90 40       	sbci	r25, 0x00	; 0
 240:	e1 f7       	brne	.-8      	; 0x23a <__vector_3+0x32>
 242:	00 c0       	rjmp	.+0      	; 0x244 <__vector_3+0x3c>
 244:	00 00       	nop
	//PORTC |= (1<<PC2);
	_delay_ms(300);
	
	// 	 PORTA = 0x00;
	// 	 PORTB = 0x00;
 246:	9f 91       	pop	r25
 248:	8f 91       	pop	r24
 24a:	2f 91       	pop	r18
 24c:	0f 90       	pop	r0
 24e:	0f be       	out	0x3f, r0	; 63
 250:	0f 90       	pop	r0
 252:	1f 90       	pop	r1
 254:	18 95       	reti

00000256 <_exit>:
 256:	f8 94       	cli

00000258 <__stop_program>:
 258:	ff cf       	rjmp	.-2      	; 0x258 <__stop_program>
